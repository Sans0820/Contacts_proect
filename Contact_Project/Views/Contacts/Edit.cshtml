@using Contact_Project.Models
@model Contact

@{
    ViewBag.Title = "Edit Contact";
}

<link rel="stylesheet" href="~/Content/CreateStyle.css" />

<h2 class="text-center mb-4">Edit Contact</h2>

@using (Html.BeginForm("Edit", "Contacts", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => m.Id)

<div class="container">

    <!-- Prefix, First Name, Last Name -->
    <div class="row mb-3">
        <div class="col-md-2">
            @Html.LabelFor(m => m.Prefix, "Prefix", new { @class = "form-label" })
            @Html.TextBoxFor(m => m.Prefix, new { @class = "form-control", placeholder = "Prefix" })
        </div>
        <div class="col-md-5">
            @Html.LabelFor(m => m.FirstName, "First Name ", new { @class = "form-label" })
            <span class="text-danger">*</span>
            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", placeholder = "First Name" })
            @Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-5">
            @Html.LabelFor(m => m.LastName, "Last Name ", new { @class = "form-label" })
            <span class="text-danger">*</span>
            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", placeholder = "Last Name" })
            @Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(m => m.ContactType, "Contact Type", new { @class = "form-label" })
        @Html.DropDownListFor(
            m => m.ContactType,
            (IEnumerable<SelectListItem>)ViewBag.ContactTypes,
            "Select Type",
            new { @class = "form-control" }
        )
        @Html.ValidationMessageFor(m => m.ContactType, "", new { @class = "text-danger" })
    </div>

    <!-- Organization -->
    <div class="form-group mb-3">
        @Html.LabelFor(m => m.Organization, "Organization", new { @class = "form-label" })
        @Html.TextBoxFor(m => m.Organization, new { @class = "form-control", placeholder = "Enter Organization" })
    </div>

    <!-- Job Title & Department -->
    <div class="row mb-3">
        <div class="col-md-6">
            @Html.LabelFor(m => m.JobTitle, "Job Title", new { @class = "form-label" })
            @Html.TextBoxFor(m => m.JobTitle, new { @class = "form-control", placeholder = "Job Title" })
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.Department, "Department", new { @class = "form-label" })
            @Html.TextBoxFor(m => m.Department, new { @class = "form-control", placeholder = "Department" })
        </div>
    </div>

    <!-- Image Upload -->
    <div class="form-group mb-3">
        @Html.Label("Image", new { @class = "form-label font-weight-bold" })

        @if (!string.IsNullOrEmpty(Model.ImagePath))
        {
            <div class="mb-2">
                <img src="@Url.Content(Model.ImagePath)" alt="Current Image" style="max-width: 150px; max-height: 150px;" class="img-thumbnail" />
            </div>
        }

        <div class="custom-file">
            <input type="file" class="form-control-file" id="ImageUpload" name="ImageUpload" />
        </div>

        <!-- Improved visibility for additional text -->
        <small class="form-text text-muted mt-2 d-block" style="color: #555; font-weight: 500;">
            Add File or drag & drop JPG or PNG (Max 5MB)
        </small>
    </div>


    <!-- Email -->
    <div class="form-group mb-3">
        @Html.LabelFor(m => m.Email, "Email ", new { @class = "form-label" })
        <span class="text-danger">*</span>
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Enter Email" })
        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
    </div>

    <div class="form-group mb-3">
        @Html.LabelFor(m => m.Phone, "Phone", new { @class = "form-label" })
        @Html.TextBoxFor(m => m.Phone, new { @class = "form-control", placeholder = "Enter Phone Number", maxlength = "10", oninput = "this.value = this.value.replace(/[^0-9]/g, '').slice(0, 10);" })
        @Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
    </div>


    <!-- Address -->
    <div class="form-group mb-3">
        @Html.LabelFor(m => m.Address, "Address", new { @class = "form-label" })
        @Html.TextBoxFor(m => m.Address, new { @class = "form-control", placeholder = "Enter Address" })
    </div>

    <!-- Address -->
    <div class="form-group mb-3">
        @Html.LabelFor(m => m.Website, "Website", new { @class = "form-label" })
        @Html.TextBoxFor(m => m.Website, new { @class = "form-control", placeholder = "Enter URL" })
    </div>

    <!-- Submit Button -->
    <div class="form-group text-center mt-4">
        <button type="submit" class="btn btn-primary px-5">Update</button>
    </div>
</div>
}

@Html.ValidationSummary(true, "", new { @class = "text-danger" })
